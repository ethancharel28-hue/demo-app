import React, { useState } from 'react';

// Dummy data for demonstration
const DUMMY_CHATS = [
  { id: 1, name: 'Alice', messages: [{ from: 'Alice', text: 'Hi!' }] },
  { id: 2, name: 'Bob', messages: [{ from: 'Bob', text: 'Hello!' }] },
];

function AuthScreen({ onAuth }: { onAuth: (user: string) => void }) {
  const [username, setUsername] = useState('');
  return (
    <div style={{ padding: 32 }}>
      <h2>Login</h2>
      <input
        placeholder="Enter your name"
        value={username}
        onChange={e => setUsername(e.target.value)}
      />
      <button onClick={() => username && onAuth(username)}>Login</button>
    </div>
  );
}

function ChatList({ chats, onSelect, onLogout, user }: any) {
  return (
    <div style={{ padding: 32 }}>
      <h2>Chats</h2>
      <div>Welcome, {user} <button onClick={onLogout}>Logout</button></div>
      <ul>
        {chats.map((chat: any) => (
          <li key={chat.id}>
            <button onClick={() => onSelect(chat)}>{chat.name}</button>
          </li>
        ))}
      </ul>
    </div>
  );
}

function ChatRoom({ chat, onBack, user }: any) {
  const [input, setInput] = useState('');
  const [messages, setMessages] = useState(chat.messages);
  const send = () => {
    if (input.trim()) {
      setMessages([...messages, { from: user, text: input }]);
      setInput('');
    }
  };
  return (
    <div style={{ padding: 32 }}>
      <button onClick={onBack}>Back</button>
      <h2>Chat with {chat.name}</h2>
      <div style={{ minHeight: 100, border: '1px solid #ccc', marginBottom: 8 }}>
        {messages.map((msg: any, i: number) => (
          <div key={i}><b>{msg.from}:</b> {msg.text}</div>
        ))}
      </div>
      <input
        value={input}
        onChange={e => setInput(e.target.value)}
        placeholder="Type a message"
        onKeyDown={e => e.key === 'Enter' && send()}
      />
      <button onClick={send}>Send</button>
    </div>
  );
}

export default function App() {
  const [user, setUser] = useState<string | null>(null);
  const [selectedChat, setSelectedChat] = useState<any>(null);
  const [chats] = useState(DUMMY_CHATS);

  if (!user) return <AuthScreen onAuth={setUser} />;
  if (selectedChat)
    return <ChatRoom chat={selectedChat} onBack={() => setSelectedChat(null)} user={user} />;
  return <ChatList chats={chats} onSelect={setSelectedChat} onLogout={() => setUser(null)} user={user} />;
}
